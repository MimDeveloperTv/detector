stages:
  - install
  - test
  - qualify
  - deploy
  - triggers

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - vendor/

install:
  stage: install
  image: git.wki.ir:5050/docker/php:8.1-cd

  script:
    - composer check-platform-reqs
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-plugins --no-scripts

test:
  stage: test
  image: git.wki.ir:5050/docker/php:8.1-cd

  services:
    - name: git.wki.ir:5050/docker/postgres:14-alpine
      alias: postgres

  variables:
    POSTGRES_DB: "test"
    POSTGRES_USER: "test"
    POSTGRES_PASSWORD: "secret"

  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-plugins --no-scripts
    - cp .env.testing.example .env.testing
    - XDEBUG_MODE=coverage php artisan test --coverage

  coverage: '/\s*Total Coverage\s*\.*\s*(\d+.\d+)/'

lint:
  stage: qualify
  image: git.wki.ir:5050/docker/php:8.1-cd

  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-plugins --no-scripts
    - ./vendor/bin/pint --test

staging:
  stage: deploy
  when: always
  image: git.wki.ir:5050/docker/php:8.1-cd

  environment:
    name: staging
    url: https://qr-detector-api.idpaydev.ir

  tags:
    - docker

  rules:
    - if: $CI_COMMIT_TAG

  variables:
    HOST_1_NAME: "srv_dev"
    HOST_1_IP: $SRV_DEV_IP
    HOST_1_PORT: $SRV_DEV_PORT
    HOST_1_USER: $SRV_DEV_USER
    HOST_1_PK: $SRV_DEV_PRIVATE_KEY
    HOST_1_ID_FILE: /root/.ssh/srv_dev

    SSH_CONFIG_FILE: /root/.ssh/config

    DIR: $QR_DETECTOR_DEV_DIR

  before_script:
    - eval "$(ssh-agent -s)"
    - mkdir -p /root/.ssh

    - touch $HOST_1_ID_FILE
    - echo "$HOST_1_PK" > $HOST_1_ID_FILE
    - chmod 600 $HOST_1_ID_FILE
    - ssh-add $HOST_1_ID_FILE

    - touch $SSH_CONFIG_FILE
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" >> $SSH_CONFIG_FILE
    - echo -e "Host $HOST_1_NAME\n\tHostName $HOST_1_IP\n\tUser $HOST_1_USER\n\tPort $HOST_1_PORT\n\tIdentityFile $HOST_1_ID_FILE\n\n" >> $SSH_CONFIG_FILE

  script:
    - ~/.composer/vendor/bin/envoy run deploy --ip=$HOST_1_IP --port=$HOST_1_PORT --user=$HOST_1_USER --dir=$DIR --host=remote

production:
  stage: deploy
  when: manual
  image: git.wki.ir:5050/docker/php:8.1-cd

  environment:
    name: production
    url: https://qr-detector-api.idpay.ir

  tags:
    - docker

  rules:
    - if: $CI_COMMIT_TAG

  variables:
    HOST_1_NAME: "srv_21"
    HOST_1_IP: $SRV_21_IP
    HOST_1_PORT: $SRV_21_PORT
    HOST_1_USER: $SRV_21_USER
    HOST_1_PK: $SRV_21_PRIVATE_KEY
    HOST_1_ID_FILE: /root/.ssh/srv_21

    HOST_2_NAME: "srv_22"
    HOST_2_IP: $SRV_22_IP
    HOST_2_PORT: $SRV_22_PORT
    HOST_2_USER: $SRV_22_USER
    HOST_2_PK: $SRV_22_PRIVATE_KEY
    HOST_2_ID_FILE: /root/.ssh/srv_22

    SSH_CONFIG_FILE: /root/.ssh/config

    DIR: $QR_DETECTOR_PROD_DIR

  before_script:
    - eval "$(ssh-agent -s)"
    - mkdir -p /root/.ssh/

    - touch $HOST_1_ID_FILE
    - echo "$HOST_1_PK" > $HOST_1_ID_FILE
    - chmod 600 $HOST_1_ID_FILE
    - ssh-add $HOST_1_ID_FILE

    - touch $HOST_2_ID_FILE
    - echo "$HOST_2_PK" > $HOST_2_ID_FILE
    - chmod 600 $HOST_2_ID_FILE
    - ssh-add $HOST_2_ID_FILE

    - touch $SSH_CONFIG_FILE
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" >> $SSH_CONFIG_FILE
    - echo -e "Host $HOST_1_NAME\n\tHostName $HOST_1_IP\n\tUser $HOST_1_USER\n\tPort $HOST_1_PORT\n\tIdentityFile $HOST_1_ID_FILE\n\n" >> $SSH_CONFIG_FILE
    - echo -e "Host $HOST_2_NAME\n\tHostName $HOST_2_IP\n\tUser $HOST_2_USER\n\tPort $HOST_2_PORT\n\tIdentityFile $HOST_2_ID_FILE\n\n" >> $SSH_CONFIG_FILE

  script:
    - ~/.composer/vendor/bin/envoy run deploy --ip=$HOST_1_IP --port=$HOST_1_PORT --user=$HOST_1_USER --dir=$DIR --host=remote
    - ~/.composer/vendor/bin/envoy run deploy --ip=$HOST_2_IP --port=$HOST_2_PORT --user=$HOST_2_USER --dir=$DIR --host=remote

docker_build:
  stage: deploy
  image: docker

  tags:
    - docker

  rules:
    - if: $CI_COMMIT_TAG

  variables:
    DOCKERFILE: docker/prod/Dockerfile
    VERSION: $CI_COMMIT_TAG
    LATEST: latest

  parallel:
    matrix:
      - TARGET: cli
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/app/cli

      - TARGET: fpm_server
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/app/fpm_server

      - TARGET: web_server
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/app/web_server

  before_script:
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY

  script:
    - docker build . --force-rm --compress --file $DOCKERFILE --target $TARGET --tag $CI_REGISTRY_IMAGE:$VERSION
    - docker push $CI_REGISTRY_IMAGE:$VERSION

    - docker tag $CI_REGISTRY_IMAGE:$VERSION $CI_REGISTRY_IMAGE:$LATEST
    - docker push $CI_REGISTRY_IMAGE:$LATEST

deploy_k8s:
  stage: triggers
  when: on_success

  rules:
    - if: $CI_COMMIT_TAG

  variables:
    VERSION: $CI_COMMIT_TAG

  trigger:
    project: devops/idpay/backend/qr-detector
