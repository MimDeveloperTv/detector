version: "3.8"
services:

  swoole_cli:
    build:
      context: .
      dockerfile: docker/swoole/Dockerfile
      target: cli
    image: qr-detector/swoole
    command: php artisan octane:start --server=swoole --host=0.0.0.0 --port=8000 --max-requests=1000
    ports:
      - "8000:8000"
    environment:
      APP_ENV: "production"
      APP_DEBUG: "false"
      APP_KEY: "base64:PupQaISP85r15+RQVxrBVL+f+QsU2/QeZmKwXEgLf78="

      REDIS_HOST: "redis_cache"
      REDIS_PASSWORD: "null"
      REDIS_PORT: "6379"

      CACHE_DRIVER: "redis"
      QUEUE_CONNECTION: "redis"

    networks:
      - backend
    healthcheck:
      test: [ "CMD", "php", "-v" ]

  swoole_web_server:
    build:
      context: .
      dockerfile: docker/swoole/Dockerfile
      target: web_server
    image: qr-detector/swoole_web_server
    ports:
      - "8081:80"
    environment:
      SWOOLE_HOST: "swoole_cli:8000"
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/health" ]


  fpm_server:
    build:
      context: .
      dockerfile: docker/prod/Dockerfile
      target: fpm_server
    image: qr-detector/fpm_server
    environment:
      APP_ENV: "production"
      APP_DEBUG: "false"
      APP_KEY: "base64:PupQaISP85r15+RQVxrBVL+f+QsU2/QeZmKwXEgLf78="

      REDIS_HOST: "redis_cache"
      REDIS_PASSWORD: "null"
      REDIS_PORT: "6379"

      CACHE_DRIVER: "redis"
      QUEUE_CONNECTION: "redis"

    networks:
      - backend
    healthcheck:
      test: [ "CMD", "php", "-v" ]

  web_server:
    build:
      context: .
      dockerfile: docker/prod/Dockerfile
      target: web_server
    image: qr-detector/web_server
    ports:
      - "8080:80"
    environment:
      FPM_HOST: "fpm_server:9000"
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/health" ]

  postgres_db:
    image: postgres:14-alpine
    ports:
      - "5432"
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "postgres", "-U", "postgres" ]

  redis_cache:
    image: redis:alpine
    ports:
      - "6379"
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

volumes:
  postgres_data:

networks:
  backend:
